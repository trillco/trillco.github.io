import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import { ValueInterpolation } from "framer/types/src/interpolation";
import "./NiceMessages.css";
import { styles } from "framer/types/src/render";

const coachMessages = [
  {
    author: "",
    date: "8/22/18, 5:30 PM",
    type: "received",
    text: "It has been a stressful and emotional week."
  },
  {
    author: "",
    date: "5:36 PM",
    type: "sent",
    text: "Never give up. I know you can do it!"
  },
  {
    author: "",
    date: "5:27 PM",
    type: "received",
    text: "I love your encouragement. Thanks for the inspiration."
  },
  {
    author: "",
    date: "8/28/18, 9:33 AM",
    type: "received",
    text: "How many grams of protein should I try to get daily?"
  },
  {
    author: "",
    date: "9:38 AM",
    type: "sent",
    text:
      "Based on your daily activity you're going to want to get around 80g of protein a day. Let me know if you would like some suggestions."
  },
  {
    author: "",
    date: "8/31/18, 2:38 PM",
    type: "received",
    text:
      "Sorry I can’t make our meeting tonight. Can we reschedule for next week?"
  },
  {
    author: "",
    date: "2:41 PM",
    type: "sent",
    text: "Sure thing. How about Wednesday at 6?"
  },
  {
    author: "",
    date: "2:45 PM",
    type: "received",
    text: "That works for me. Thanks!"
  },
  {
    author: "",
    date: "9/10/18, 3:50 PM",
    type: "sent",
    text:
      "Hope you are doing well and continuing to see results. Let’s touch base soon."
  },
  {
    author: "",
    date: "4:07 PM",
    type: "received",
    text: "Had a rough few days but starting to feel better now."
  }
];

const ipsumMessages = [
  {
    author: "",
    date: "8/22/18, 5:30 PM",
    type: "received",
    text: "Lorem ipsum dolor sit amet, sit dolore blandit appetere at."
  },
  {
    author: "",
    date: "5:36 PM",
    type: "sent",
    text: "Mundi legere legimus et eam, no eam erant corpora."
  },
  {
    author: "",
    date: "5:27 PM",
    type: "received",
    text: "Has at autem ornatus iracundia, eos et doming dissentias."
  },
  {
    author: "",
    date: "8/28/18, 9:33 AM",
    type: "received",
    text:
      "Usu ex dicam scripserit, nulla offendit adipiscing est ad, ne omnes utinam vel."
  },
  {
    author: "",
    date: "9:38 AM",
    type: "sent",
    text:
      "Adhuc sensibus at has. Amet decore appellantur mel ex. Eum at saperet admodum, usu te wisi laoreet fastidii."
  },
  {
    author: "",
    date: "8/31/18, 2:38 PM",
    type: "received",
    text: "Sumo possim persequeris eu mea, per ne viris postulant salutatus."
  },
  {
    author: "",
    date: "2:41 PM",
    type: "sent",
    text: "Ex prima nullam definitiones eum, qui eu cibo dissentias."
  },
  {
    author: "",
    date: "2:45 PM",
    type: "received",
    text:
      "An has porro diceret, eos et tamquam invenire, te eos insolens sadipscing appellantur."
  },
  {
    author: "",
    date: "9/10/18, 3:50 PM",
    type: "received",
    text: "Vel at diceret mediocritatem, habeo ignota id per."
  }
];

const groupMessages = [
  {
    date: "8/22/18, 5:30 PM",
    author: "Chris Winter",
    type: "received",
    text: "Lorem ipsum dolor sit amet, sit dolore blandit appetere at."
  },
  {
    date: "5:36 PM",
    author: "Hunter Summar",
    type: "received",
    text: "Mundi legere legimus et eam, no eam erant corpora."
  },
  {
    date: "5:27 PM",
    author: "Emily Houston",
    type: "received",
    text: "Has at autem ornatus iracundia, eos et doming dissentias."
  },
  {
    date: "8/28/18, 9:33 AM",
    author: "Russ Campbell",
    type: "received",
    text:
      "Usu ex dicam scripserit, nulla offendit adipiscing est ad, ne omnes utinam vel."
  },
  {
    date: "9:38 AM",
    author: "Janelle Royer",
    type: "received",
    text:
      "Adhuc sensibus at has. Amet decore appellantur mel ex. Eum at saperet admodum, usu te wisi laoreet fastidii."
  },
  {
    date: "8/31/18, 2:38 PM",
    author: "Ryan Wilson",
    type: "received",
    text: "Sumo possim persequeris eu mea, per ne viris postulant salutatus."
  },
  {
    date: "2:41 PM",
    author: "Elinor Smith",
    type: "received",
    text: "Ex prima nullam definitiones eum, qui eu cibo dissentias."
  },
  {
    date: "2:45 PM",
    author: "Nick Summar",
    type: "received",
    text:
      "An has porro diceret, eos et tamquam invenire, te eos insolens sadipscing appellantur."
  },
  {
    date: "9/10/18, 3:50 PM",
    author: "Elinor Smith",
    type: "received",
    text: "Vel at diceret mediocritatem, habeo ignota id per."
  }
];

// Define type of property
interface Props {
  sentColor: string;
  sentTextColor: string;
  receivedColor: string;
  messageText: string;
  fontSize: number;
  margin: number;
  padding: number;
  borderRadius: number;
  shadow: boolean;
  contentBottomInset: number;
  animateNewMessages: boolean;
  messages: [];
}

// Define type of property
interface Props {
  sentColor: string;
  sentTextColor: string;
  receivedColor: string;
  messageText: string;
  fontSize: number;
  margin: number;
  padding: number;
  borderRadius: number;
  shadow: boolean;
  contentBottomInset: number;
  animateNewMessages: boolean;
  messages: [];
}

export class NiceMessages extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    sentColor: "#5983F0",
    sentTextColor: "#FFFFFF",
    receivedColor: "#DDDDDD",
    el: null,
    width: 375,
    height: 275,
    messageText: "ipsum",
    fontSize: 15,
    margin: 15,
    padding: 10,
    borderRadius: 4,
    shadow: false,
    contentBottomInset: 0,
    animateNewMessages: true,
    messages: []
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    messageText: {
      type: ControlType.Enum,
      title: "Text",
      options: ["ipsum", "coach", "group"],
      optionTitles: ["Lorem Ipsum", "Coaching", "Group"]
    },
    sentColor: { type: ControlType.Color, title: "Sent" },
    sentTextColor: { type: ControlType.Color, title: "Sent Text" },
    receivedColor: { type: ControlType.Color, title: "Received" },
    fontSize: { type: ControlType.Number, title: "Text Size" },
    margin: { type: ControlType.Number, title: "Margin" },
    padding: { type: ControlType.Number, title: "Padding" },
    borderRadius: { type: ControlType.Number, title: "Rounded" },
    shadow: { type: ControlType.Boolean, title: "Shadow" },
    contentBottomInset: { type: ControlType.Number, title: "Inset" },
    animateNewMessages: { type: ControlType.Boolean, title: "Animate" }
  };

  componentDidMount() {
    this.scrollToBottom();
  }

  componentDidUpdate() {
    this.scrollToBottom();
  }

  scrollToBottom() {
    const { frame } = this.refs;
    frame.scrollTop = frame.scrollHeight - frame.clientHeight;
  }

  render() {
    const messages = this.props.messages.length
      ? this.props.messages
      : this.props.messageText === "ipsum"
        ? ipsumMessages
        : this.props.messageText === "coach"
          ? coachMessages
          : groupMessages;

    return (
      <div
        style={{
          height: "100%",
          overflowY: "scroll",
          paddingBottom: this.props.contentBottomInset
        }}
        ref={`frame`}
      >
        {messages.map((value, i) => (
          <div
            style={{
              paddingLeft: this.props.margin,
              paddingRight: this.props.margin
            }}
          >
            <div
              style={{
                fontSize: 12,
                fontWeight: 600,
                marginTop: 28,
                color: "#999999",
                textAlign:
                  value.type === "sent" || this.props.messageText === "group"
                    ? "right"
                    : "left"
              }}
            >
              {this.props.messageText === "group" && (
                <span style={{ float: "left", color: "black" }}>
                  {value.author}
                </span>
              )}
              {value.date}
            </div>

            <div
              className={
                this.props.animateNewMessages && i === messages.length - 1
                  ? "ZoomIn"
                  : ""
              }
              style={{
                padding: this.props.padding,
                marginLeft:
                  value.type === "sent" && this.props.messageText !== "group"
                    ? "20%"
                    : 0,
                marginRight:
                  value.type === "sent" || this.props.messageText === "group"
                    ? 0
                    : "20%",
                marginTop: this.props.messageText !== "group" ? 15 : 5,
                marginBottom: 15,
                fontSize: this.props.fontSize,
                border: this.props.shadow ? ".5px solid rgba(0,0,0,.07)" : "",
                boxShadow: this.props.shadow
                  ? "0px 1px 5px rgba(0,0,0, .06)"
                  : "",
                backgroundColor:
                  value.type === "sent"
                    ? this.props.sentColor
                    : this.props.receivedColor,
                color:
                  value.type === "sent" ? this.props.sentTextColor : "black",
                borderRadius: this.props.borderRadius
              }}
            >
              {/* Animated New Badge */}
              {this.props.animateNewMessages &&
                value.type != "sent" &&
                i === messages.length - 1 && (
                  <div
                    className="ZoomIn-2"
                    style={{
                      backgroundColor: this.props.sentColor,
                      float: "right",
                      zIndex: 4,
                      padding: "4px 7px",
                      borderRadius: 15,
                      fontSize: 10,
                      fontWeight: 600,
                      color: "white",
                      marginTop: -20,
                      marginRight: -22
                    }}
                  >
                    NEW
                  </div>
                )}
              {value.text}
            </div>
          </div>
        ))}
      </div>
    );
  }
}
